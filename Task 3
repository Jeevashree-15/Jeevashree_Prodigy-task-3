import tkinter as tk
from datetime import datetime

# Function to update the timer
def update_timer():
    if running:
        global start_time
        elapsed_time = datetime.now() - start_time
        mins, secs = divmod(elapsed_time.seconds, 60)
        millis = elapsed_time.microseconds // 1000
        time_str = f'{mins:02}:{secs:02}:{millis:03}'
        timer_label.config(text=time_str)
        timer_label.after(10, update_timer)

# Function to start the timer
def start_timer():
    global running, start_time
    if not running:
        running = True
        start_time = datetime.now() - elapsed_time
        update_timer()

# Function to pause the timer
def pause_timer():
    global running, elapsed_time
    if running:
        running = False
        elapsed_time = datetime.now() - start_time

# Function to reset the timer
def reset_timer():
    global running, elapsed_time
    running = False
    elapsed_time = datetime.now() - datetime.now()
    timer_label.config(text='00:00:000')

# Initializing main window
root = tk.Tk()
root.title("Stopwatch")
root.geometry("300x200")

# Timer display label
timer_label = tk.Label(root, text='00:00:000', font=("Arial", 30))
timer_label.pack(pady=20)

# Control buttons
button_frame = tk.Frame(root)
button_frame.pack()

start_button = tk.Button(button_frame, text="Start", font=("Arial", 14), command=start_timer)
start_button.pack(side=tk.LEFT, padx=10)

pause_button = tk.Button(button_frame, text="Pause", font=("Arial", 14), command=pause_timer)
pause_button.pack(side=tk.LEFT, padx=10)

reset_button = tk.Button(button_frame, text="Reset", font=("Arial", 14), command=reset_timer)
reset_button.pack(side=tk.LEFT, padx=10)

# Initializing variables
running = False
start_time = datetime.now()
elapsed_time = datetime.now() - datetime.now()

# Run the application
root.mainloop()
